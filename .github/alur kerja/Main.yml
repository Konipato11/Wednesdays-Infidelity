# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run.

on:

  # Triggers the workflow on push or pull request events but only for the master branch

  push:

    branches: [ main ]

  pull_request:

    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:

  # This workflow contains a single job called "build"

  buildLinux:

    # The type of runner that the job will run on

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master

        with:

          haxe-version: 4.2.5

      # Runs a set of commands using the runners shell

      - name: Install Haxelib

        run: |

          sudo apt-get install libvlc-dev

          sudo apt-get install libvlccore-dev

          haxelib setup ~/haxelib

          haxelib install hxcpp > /dev/null

          haxelib install lime

          haxelib install openfl

          haxelib --never install flixel

          haxelib run lime setup flixel

          haxelib run lime setup

          haxelib install flixel-tools

          haxelib install flixel-ui

          haxelib install flixel-addons

          haxelib install tjson

          haxelib install hxjsonast

          haxelib install hxCodec

          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit

          haxelib install hscript

          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex

          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc

          haxelib install hxcpp-debug-server

          haxelib list

      - name: Create Version Tag

        run: echo "${{github.run_id}}" > VERSION

      - name: Compile

        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"

      - name: Publish Artifact

        uses: actions/upload-artifact@v2.2.4

        with:

          name: linuxBuild

          path: 'export/release/linux/bin'

  buildWindows:

    runs-on: windows-latest

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master

        with:

          haxe-version: 4.2.5

      # Runs a set of commands using the runners shell

      - name: Install Haxelib

        run: |

          haxelib setup C:/haxelib

          haxelib install hxcpp > nul

          haxelib install lime

          haxelib install openfl

          haxelib --never install flixel

          haxelib run lime setup flixel

          haxelib run lime setup

          haxelib install flixel-tools

          haxelib install flixel-ui

          haxelib install flixel-addons

          haxelib install tjson

          haxelib install hxjsonast

          haxelib install hxCodec

          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit

          haxelib install hscript

          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex

          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc

          haxelib install hxcpp-debug-server

          haxelib list

        shell: cmd

      - name: Create Version Tag

        run: echo "${{github.run_id}}" > VERSION

      - name: Compile

        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"

      - name: Publish Artifact

        uses: actions/upload-artifact@v2.2.4

        with:

          name: windowsBuild

          path: export/release/windows/bin

  buildMac:

    runs-on: macos-latest

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master

        with:

          haxe-version: 4.2.5

      # Runs a set of commands using the runners shell

      - name: Install Haxelib

        run: |

          haxelib setup ~/haxelib

          haxelib install hxcpp > /dev/null

          haxelib install lime

          haxelib install openfl

          haxelib --never install flixel

          haxelib run lime setup flixel

          haxelib run lime setup

          haxelib install flixel-tools

          haxelib install flixel-ui

          haxelib install flixel-addons

          haxelib install tjson

          haxelib install hxjsonast

          haxelib install hxCodec

          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit

          haxelib install hscript

          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex

          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc

          haxelib install hxcpp-debug-server

          haxelib list

      - name: Create Version Tag

        run: echo "${{github.run_id}}" > VERSION

      - name: Compile

        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"

      - name: Publish Artifact

        menggunakan: tindakan/upload-artifact@v2.2.4

        dengan:

          nama: macBuild

          jalur: ekspor/rilis/macos/bin

  membangun Android:

    nama: buildAndroid

    berjalan-on: ubuntu-terbaru

    Langkah:

      - nama: Checkout

        menggunakan: tindakan/checkout@v2.3.1

      - nama: Siapkan Android NDK

        menggunakan: nttld/setup-ndk@v1

        id: setup-ndk

        dengan:

          ndk-versi: r21e

      - nama: Setup Java JDK

        menggunakan: tindakan/setup-java@v1

        dengan:

          versi java: 11

      - nama: Siapkan Android SDK

        menggunakan: android-actions/setup-android@v2

      - nama: Setup Haxe

        menggunakan: krdlab/setup-haxe@v1.1.5

        dengan:

          versi haxe: 4.2.5

      - nama: Instal Haxelib

        lari: |

          pengaturan haxelib ~/haxelib

          haxelib instal hxcpp > /dev/null

          haxelib menginstal kapur

          haxelib instal openfl

          haxelib --jangan pernah instal flixel

          haxelib menjalankan pengaturan kapur flixel

          haxelib menginstal flixel-tools

          haxelib menginstal flixel-ui

          haxelib menginstal hscript

          haxelib menginstal flixel-addons

          haxelib instal hxCodec

          haxelib git linc_luajit https://github.com/jigsaw-4277821/linc_luajit.git

          haxelib git extension-androidtools https://github.com/jigsaw-4277821/extension-androidtools.git

          daftar haxelib

      - nama: Buat Tag Versi

        jalankan: echo "${{github.run_id}}" > VERSI

      - nama: Setup Lime

        lari: |

          haxelib menjalankan pengaturan kapur -alias -y

          haxelib menjalankan konfigurasi kapur ANDROID_SDK $ANDROID_HOME

          haxelib menjalankan konfigurasi kapur ANDROID_NDK_ROOT $ANDROID_NDK_HOME

          haxelib menjalankan konfigurasi kapur JAVA_HOME $JAVA_HOME

          haxelib run lime config ANDROID_SETUP true

        lingkungan:

          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile

        run: haxelib run lime build android --app-version="4.0.0-${{ github.run_id}}"

      - name: Publish Artifact

        uses: actions/upload-artifact@v2.2.4

        with:

          name: androidBuild

          path: export/release/android/bin/app/build/outputs/apk/debugkami
